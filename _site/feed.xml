<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="https://www.x6d.se/feed.xml" rel="self" type="application/atom+xml"/><link href="https://www.x6d.se/" rel="alternate" type="text/html"/><updated>2017-04-07T19:14:22+02:00</updated><id>https://www.x6d.se/</id><title type="html">x6d</title><subtitle>My webpage for different things I like. You might find things like related to but not limited to linux, vim, personal projects,reverse engineering and gamehacking, automation. </subtitle><entry><title type="html">Abusing games implmentation of interpreted language</title><link href="https://www.x6d.se/2017/04/07/Taking_control_interpreted_language.html" rel="alternate" type="text/html" title="Abusing games implmentation of interpreted language"/><published>2017-04-07T00:00:00+02:00</published><updated>2017-04-07T00:00:00+02:00</updated><id>https://www.x6d.se/2017/04/07/Taking_control_interpreted_language</id><content type="html" xml:base="https://www.x6d.se/2017/04/07/Taking_control_interpreted_language.html">&lt;p&gt; Modern applications escpecially games tend to integrate an interpreted language, usually the most resource-intensive parts of the code is handled inside the game engine written with for example c++ that will be compiled into hopefully efficient bytecode. &lt;/p&gt; &lt;p&gt; The main advantage would be development speed, as you can load new sourcecode without the need for recompiling the source code. Also commenly used to give a front to the community modding where they can access specific game function.&lt;br&gt; I want to highlight &quot;load new sourcecode&quot; as this isn't limited to the developers, an &quot;attacker&quot; can easily do the same. Interpreted languages isn't designed to achive this kind of security. It's good to keep that in mind and carefully design your application accordingly. &lt;/p&gt; &lt;p&gt; Not trying to say it's bad or wrong way of development, it's nothing wrong with integrating and using an interpreted language, I would rather argue it's probably the best(or nicest) way of development. &lt;/p&gt; &lt;h2&gt;Protection&lt;/h2&gt; &lt;p&gt; I have seen two common prevention measures for altering gamefiles, sometimes both. &lt;ul&gt; &lt;li&gt;Archive and encrypt&lt;/li&gt; Basic idea is to pack all the gamefiles in one or many archives and encrypt it. &lt;li&gt;File signature, checksum&lt;/li&gt; Have some kind of verification of the files loaded, In some cases(if not most) it's not build for protection for altering game files, it's more used for verifying the patch integrity. &lt;/ul&gt; &lt;/p&gt; &lt;p&gt; Something I find interesting is when we come to peer to peer games, &lt;/p&gt; &lt;p&gt; And now I'll stop, thanks for reading! &lt;/p&gt;</content><author><name></name></author><summary type="html">Modern applications escpecially games tend to integrate an interpreted language, usually the most resource-intensive parts of the code is handled inside the game engine written with for example c++ that will be compiled into hopefully efficient bytecode. The main advantage would be development speed, as you can load new sourcecode without the need for recompiling the source code. Also commenly used to give a front to the community modding where they can access specific game function.</summary></entry><entry><title type="html">Tkstats.info data mining and parsing</title><link href="https://www.x6d.se/2017/04/02/tkstats.html" rel="alternate" type="text/html" title="Tkstats.info data mining and parsing"/><published>2017-04-02T00:00:00+02:00</published><updated>2017-04-02T00:00:00+02:00</updated><id>https://www.x6d.se/2017/04/02/tkstats</id><content type="html" xml:base="https://www.x6d.se/2017/04/02/tkstats.html">&lt;p&gt; Lovely project of mine, I have this weird love to investigate software and take them apart. While I was trying out the game myself I felt this constant annoyance of figuring out what items I wanted to use, comparing A, B and C in-game.&lt;br&gt; The game don't seem to have a wiki to turn to, so why not begin to create one ourself! &lt;/p&gt; &lt;p&gt; It has been a really fun project to work with, with different things to find solutions for. &lt;/p&gt;</content><author><name></name></author><summary type="html">Lovely project of mine, I have this weird love to investigate software and take them apart. While I was trying out the game myself I felt this constant annoyance of figuring out what items I wanted to use, comparing A, B and C in-game. The game don't seem to have a wiki to turn to, so why not begin to create one ourself! It has been a really fun project to work with, with different things to find solutions for.</summary></entry><entry><title type="html">Hello world!</title><link href="https://www.x6d.se/2017/02/24/helloworld.html" rel="alternate" type="text/html" title="Hello world!"/><published>2017-02-24T00:00:00+01:00</published><updated>2017-02-24T00:00:00+01:00</updated><id>https://www.x6d.se/2017/02/24/helloworld</id><content type="html" xml:base="https://www.x6d.se/2017/02/24/helloworld.html">&lt;p&gt;And now the site is live and here is the first post!.&lt;/p&gt;</content><author><name></name></author><summary type="html">And now the site is live and here is the first post!.</summary></entry></feed>